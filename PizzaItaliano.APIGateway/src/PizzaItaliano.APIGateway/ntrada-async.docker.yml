auth:
  enabled: true
  global: false
  role: http://schemas.microsoft.com/ws/2008/06/identity/claims/role

http:
  retries: 2
  interval: 2.0
  exponential: true

useForwardedHeaders: true
passQueryString: true
forwardRequestHeaders: true
forwardResponseHeaders: true
generateRequestId: true
generateTraceId: true
useLocalUrl: false
loadBalancer:
  enabled: false
  url: fabio:9999

extensions:
  customErrors:
    includeExceptionMessage: true

  cors:
    allowCredentials: true
    allowedOrigins:
      - '*'
    allowedMethods:
      - POST
      - PUT
      - PATCH
      - DELETE
    allowedHeaders:
      - '*'
    exposedHeaders:
      - Request-ID
      - Resource-ID
      - Trace-ID
      - Total-Count
          
  jwt:
    issuerSigningKey: afas35svG34gh5SH9jNUOsdoig914352Tasfdfgw5r23agmnbidpo235521sdngoiusnhgqwr2sgghAC
    validIssuer: pizza-italiano
    validateAudience: false
    validateIssuer: true
    validateLifetime: true

  swagger:
    name: PizzaItaliano
    reDocEnabled: false
    title: PizzaItaliano API
    version: v1
    routePrefix: docs
    includeSecurity: true

  rabbitmq:
    enabled: true
    connectionName: api-gateway
    hostnames:
      - rabbitmq
    port: 5672
    virtualHost: /
    username: guest
    password: guest
    requestedConnectionTimeout: 3000
    socketReadTimeout: 3000
    socketWriteTimeout: 3000
    requestedHeartbeat: 60
    exchange:
      declareExchange: true
      durable: true
      autoDelete: false
      type: topic
    messageContext:
      enabled: true
      header: message_context
    logger:
      enabled: true
    spanContextHeader: span_context

  tracing:
    serviceName: api-gateway
    udpHost: jaeger
    udpPort: 6831
    maxPacketSize: 0
    sampler: const
    useEmptyTracer: false

modules:
  home:
    routes:
      - upstream: /
        method: GET
        use: return_value
        returnValue: Welcome to PizzaItaliano API [async]!
  
  identity:
    path: identity
    routes:
      - upstream: /health-check
        method: GET
        use: downstream
        downstream: identity-service

      - upstream: /users/{userId}
        method: GET
        use: downstream
        downstream: identity-service/users/{userId}
        auth: true
        role: admin

      - upstream: /me
        method: GET
        use: downstream
        downstream: identity-service/me
        auth: true
    
      - upstream: /sign-up
        method: POST
        use: downstream
        downstream: identity-service/sign-up
        auth: false
        resourceId:
          property: userId
          generate: true
    
      - upstream: /sign-in
        method: POST
        use: downstream
        downstream: identity-service/sign-in
        auth: false
        responseHeaders:
          content-type: application/json

      - upstream: /change-password
        method: POST
        use: downstream
        downstream: identity-service/change-password
        auth: true
    
      - upstream: /users
        method: GET
        use: downstream
        downstream: identity-service/users
        auth: true
        role: admin

      - upstream: /users/{userId}/change-role
        method: PUT
        use: downstream
        downstream: identity-service/users/{userId}/change-role
        auth: true
        role: admin

    services:
      identity-service:
        localUrl: localhost:5006
        url: identity-service

  products:
    path: products
    routes:
      - upstream: /health-check
        method: GET
        use: downstream
        downstream: products-service

      - upstream: /
        method: GET
        use: downstream
        downstream: products-service/products

      - upstream: /{productId}
        method: GET
        use: downstream
        downstream: products-service/products/{productId}
        bind:
          - productId: {productId}

      - upstream: /
        method: POST
        use: rabbitmq
        config:
          exchange: product
          routing_key: add_product
        auth: true
        role: admin

      - upstream: /{productId}
        method: PUT
        use: rabbitmq
        config:
          exchange: product
          routing_key: modify_product
        bind:
          - productId: {productId}
        auth: true
        role: admin

      - upstream: /{productId}
        method: DELETE
        use: rabbitmq
        config:
          exchange: product
          routing_key: delete_product
        bind:
          - productId: {productId}
        auth: true
        role: admin

    services:
      products-service:
        localUrl: localhost:5001
        url: product-service

  orders:
    path: orders
    routes:
      - upstream: /health-check
        method: GET
        use: downstream
        downstream: orders-service

      - upstream: /
        method: GET
        use: downstream
        downstream: orders-service/orders
        auth: true
        role: admin

      - upstream: /{orderId}
        method: GET
        use: downstream
        downstream: orders-service/orders/{orderId}
        bind:
          - orderId: {orderId}
        auth: true             
      - upstream: /my
        method: GET
        use: downstream
        downstream: orders-service/orders/my
        auth: true                                    

      - upstream: /
        method: POST
        use: rabbitmq
        config:
          exchange: order
          routing_key: add_order
        auth: true

      - upstream: /order-product
        method: POST
        use: rabbitmq
        config:
          exchange: order
          routing_key: add_order_product
        auth: true

      - upstream: /{orderId}
        method: PUT
        use: rabbitmq
        config:
          exchange: order
          routing_key: set_order_status_ready
        bind:
          - orderId: {orderId}
        auth: true

      - upstream: /{orderId}/order-product/{orderProductId}/quantity/{quantity}
        method: DELETE
        use: rabbitmq
        config:
          exchange: order
          routing_key: delete_order_product
        bind:
          - orderId: {orderId}
          - orderProductId: {orderProductId}
          - quantity: {quantity}
        auth: true

    services:
      orders-service:
        localUrl: localhost:5002
        url: order-service

  releases:
    path: releases
    routes:
      - upstream: /health-check
        method: GET
        use: downstream
        downstream: releases-service

      - upstream: /
        method: GET
        use: downstream
        downstream: releases-service/releases
        auth: true
        role: admin

      - upstream: /{releaseId}
        method: GET
        use: downstream
        downstream: releases-service/releases/{releaseId}
        bind:
          - releaseId: {releaseId}
        auth: true

      - upstream: /
        method: POST
        use: rabbitmq
        config:
          exchange: release
          routing_key: add_release
        auth: true
        
      - upstream: /by-order/{orderId}
        method: GET
        use: downstream
        downstream: releases-service/releases/by-order/{orderId}
        bind:
          - orderId: {orderId}
        auth: true

    services:
      releases-service:
        localUrl: localhost:5003
        url: release-service

  payments:
    path: payments
    routes:
      - upstream: /health-check
        method: GET
        use: downstream
        downstream: payments-service

      - upstream: /
        method: GET
        use: downstream
        downstream: payments-service/payments
        auth: true
        role: admin

      - upstream: /{paymentId}
        method: GET
        use: downstream
        downstream: payments-service/payments/{paymentId}
        bind:
          - paymentId: {paymentId}
        auth: true
          
      - upstream: /{paymentStatus}
        method: GET
        use: downstream
        downstream: payments-service/payments
        bind:
          - paymentStatus: {paymentStatus}
        auth: true
        role: admin
      
      - upstream: /from/{dateFrom}/to/{dateTo}
        method: GET
        use: downstream
        downstream: payments-service/payments/from/{dateFrom}/to/{dateTo}
        bind:
          - dateFrom: {dateFrom}
          - dateTo: {dateTo}
        auth: true
        role: admin
          
      - upstream: /from/{dateFrom}/to/{dateTo}/{paymentStatus}
        method: GET
        use: downstream
        downstream: payments-service/payments/from/{dateFrom}/to/{dateTo}/{paymentStatus}
        bind:
          - dateFrom: {dateFrom}
          - dateTo: {dateTo}    
          - paymentStatus: {paymentStatus}
        auth: true
        role: admin

      - upstream: /
        method: POST
        use: rabbitmq
        config:
          exchange: payment
          routing_key: add_payment
        auth: true

      - upstream: /{paymentId}
        method: PUT
        use: rabbitmq
        config:
          exchange: payment
          routing_key: update_payment
        bind:
          - paymentId: {paymentId}
        auth: true

      - upstream: /by-order/{orderId}
        method: GET
        use: downstream
        downstream: payments-service/payments/by-order/{orderId}
        bind:
          - orderId: {orderId}
        auth: true

    services:
      payments-service:
        localUrl: localhost:5004
        url: payment-service

  operations:
    path: operations
    routes:
      - upstream: /{operationId}
        method: GET
        use: downstream
        downstream: operations-service/operations/{operationId}
        auth: false
        bind:
          - operationId: {operationId}

    services:
      operations-service:
        localUrl: localhost:5005
        url: operations-service